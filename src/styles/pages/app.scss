/*houdini*/
@property --blink-opacity {
    syntax: "<number>";
    inherits: false;
    initial-value: 1;
  }
  
@keyframes blink-animation {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }
  
  @keyframes blink-animation {
    0%,
    100% {
      opacity: var(--blink-opacity, 1);
    }
    50% {
      opacity: 0;
    }
  }
  /*houdini*/
  
  /*base*/
  :root {
    font-family: Inter, sans-serif;
  
    --stripe-color: #fff;
    --bg: var(--stripe-color);
    --maincolor: var(--bg);
  }
  
  body {
    margin: 0;
    width: 100cqw;
    min-height: 100cqh;
    display: flex;
    place-content: center;
    place-items: flex-start center;
    background: var(--bg);
  }
  
  /*custom*/
  
  @keyframes smoothBg {
    from {
      background-position: 50% 50%, 50% 50%;
    }
    to {
      background-position: 350% 50%, 350% 50%;
    }
  }
  
  .wrapper {
    width: 100%;
    height: auto;
    position: relative;
  }
  
  .hero {
    width: 100vw;
    height: 100vh;
    min-height: 100vh;
    position: relative;
    display: flex;
    place-content: center;
    place-items: center;
    --stripes: repeating-linear-gradient(
      100deg,
      var(--stripe-color) 0%,
      var(--stripe-color) 7%,
      transparent 10%,
      transparent 12%,
      var(--stripe-color) 16%
    );
  
    --rainbow: repeating-linear-gradient(
      100deg,
      #60a5fa 10%,
      #e879f9 15%,
      #60a5fa 20%,
      #5eead4 25%,
      #60a5fa 30%
    );
    background-image: var(--stripes), var(--rainbow);
    background-size: 300%, 200%;
    background-position: 50% 50%, 50% 50%;
  
    filter: blur(10px) invert(100%);
  
    mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);
    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background-image: var(--stripes), var(--rainbow);
      background-size: 200%, 100%;
      animation: smoothBg 60s linear infinite;
      background-attachment: fixed;
      mix-blend-mode: difference;
    }
  }
  
  :has(:checked) {
    --stripe-color: #000;
  }
  :has(:checked) .hero,
  :has(:checked) .hero::after {
    filter: blur(10px) opacity(50%) saturate(200%);
  }
  
  .content {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    display: flex;
    place-content: center;
    place-items: center;
    flex-flow: column;
    gap: 4.5%;
    text-align: center;
    mix-blend-mode: difference;
    -webbkit-mix-blend-mode: difference;
    filter: invert(1);
  }
  
  .h1--scalingSize {
    font-size: calc(1rem - -5vw);
    position: relative;
  }
  
  #switch {
    appearance: none;
    -webkit-appearance: none;
    opacity: 0;
  }
  
  [for="switch"] {
    cursor: pointer;
    transition: 0.15s linear(0 0%, 0.16 16.85%, 0.32 31.73%, 1 100%);
    will-change: transform, font-weight;
    padding: 0.5rem;
  }
  
  [for="switch"]:where(:hover, :active, :focus-within) {
    transform: scale(1.2);
    font-weight: 900;
    transition: 0.3s ease;
    animation: animSwitch 0.2s alternate;
    & .icon {
      animation-play-state: paused;
    }
  }
  
  @keyframes animSwitch {
    50% {
      transform: scale(1.2);
      font-weight: 900;
    }
  }
  
  /*icon houdini*/
  .icon {
    width: 1lh;
    height: 1lh;
    aspect-ratio: 1/1;
    padding: 0.25em 0.35rem;
    border-radius: calc(1px / 0);
    border: 1px dashed;
    --blink-opacity: 1;
    animation: blink-animation 2s ease-in-out infinite running;
  }
  
  /*challenge*/
  .h1--scalingSize::before {
    content: attr(data-text);
    position: absolute;
    inset: 0;
    background: white;
    text-shadow: 0 0 1px #ffffff;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    background-color: white;
    -webkit-mask: linear-gradient(#000 0 0) luminance;
    mask: linear-gradient(#000 0 0) luminance, alpha;
    backdrop-filter: blur(19px) brightness(12.5);
    -webkit-text-stroke: 1px white;
    display: flex;
    margin: auto;
    z-index: 1;
    pointer-events: none;
  }


/* Estilos específicos del contador */
.counter-container {
  top: 0; /* Posiciona el contador en la parte superior */
  left: 0;
  right: 0;
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: white;
  overflow: hidden;
  width: 100vw;
  height: 20vh; /* Altura reducida para no ocupar toda la pantalla */
  padding: 0 10vw; /* Padding lateral para evitar que los números toquen los bordes */
  z-index: 10; /* Asegurar que el contenedor esté encima de otros elementos */
  flex-wrap: wrap; /* Permite que los elementos se envuelvan */
}

.counter-span, .counter-span.message {
  color: black;
  font-size: calc(3vw + 1rem); /* Tamaño de fuente ajustable */
  font-weight: 700;
  text-align: center;
  text-transform: uppercase;
  display: block; /* Bloque para manejar el espacio de manera individual */
  opacity: 0;
  filter: blur(0.6rem);
  transition: opacity 0.5s ease, filter 0.5s ease;
  margin: 0 5vw; /* Espacio entre los números */
  position: relative; /* Posición relativa dentro del contenedor flex */
  z-index: 20; /* Asegurar que los spans estén encima del contenedor */
}

/* Aplicar margin-left solo a los números, no al mensaje */
.counter-span:not(.message) {
  margin-left: 0; /* Elimina el margen izquierdo adicional */
}

/* Asegurarse de que el mensaje no tenga margin-left adicional */
.counter-span.message {
  margin-left: 0; /* Restablece cualquier margen para el mensaje */
}

/* Remover margen del último elemento para evitar espacio extra al final */
.counter-span:last-child, .counter-span.message:last-child {
  margin-right: 0;
}

@keyframes counterAnimation {
  0% {
    opacity: 0;
    filter: blur(0.6rem);
  }
  5% {
    opacity: 1;
    filter: blur(0.1rem);
  }
  10% {
    opacity: 1;
    filter: blur(0.1rem);
  }
  20% {
    opacity: 0;
    filter: blur(0.6rem);
  }
  100% {
    opacity: 0;
    filter: blur(0.6rem);
  }
}

/* Animación para cada número con delays específicos */
.counter-span:nth-child(1) { animation: counterAnimation 11s infinite ease; animation-delay: 0s; }
.counter-span:nth-child(2) { animation: counterAnimation 11s infinite ease; animation-delay: 1s; }
.counter-span:nth-child(3) { animation: counterAnimation 11s infinite ease; animation-delay: 2s; }
.counter-span:nth-child(4) { animation: counterAnimation 11s infinite ease; animation-delay: 3s; }
.counter-span:nth-child(5) { animation: counterAnimation 11s infinite ease; animation-delay: 4s; }

@keyframes showMsg {
  0% {
    opacity: 0;
    filter: blur(0.6rem);
  }
  100% {
    opacity: 1;
    filter: blur(0);
  }
}

.counter-span.message {
  animation: showMsg 2s forwards; /* Animación para que el mensaje 'AUDIO ENVIADO' aparezca claramente */
}

.button-wrapper {
  position: relative;
  top: 20vh; /* Ajusta esta altura según sea necesario */
  z-index: 1; /* Colocar el botón en una capa inferior */
}


/* src/components/InstructionModal.scss */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal {
  background-color: #fff;
  padding: 2rem;
  border-radius: 8px;
  width: 90%;
  max-width: 500px;
  position: relative;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.modal-content {
  margin-bottom: 1.5rem;
  font-size: 1.1rem;
  color: #333;
}

.modal-navigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.modal-navigation button {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #007bff;
}

.modal-navigation button:disabled {
  color: #ccc;
  cursor: not-allowed;
}

.modal-navigation span {
  font-size: 1rem;
  color: #555;
}

.modal-close {
  position: absolute;
  top: 0.5rem;
  right: 0.75rem;
  background: none;
  border: none;
  font-size: 1.25rem;
  cursor: pointer;
  color: #999;
}

.modal-close:hover {
  color: #666;
}
